doctype html
html
  head
    if no_query
      title search teddit
      meta(property='og:title', content='search - teddit')
    else
      title search results for #{q}
      meta(property='og:title', content='search results for ' + q + ' - teddit')
    include includes/meta_default.pug
    include includes/meta_description.pug
    include includes/head.pug
  body(class=""+ (user_preferences.theme === 'auto' ? 'dark' : user_preferences.theme) + "")
    include includes/topbar.pug
    #search.sr.search-page
      form(action="/r/" + subreddit + "/search", method="GET")
        div
          label(for="q") search
            input(type="text", name="q", id="q", placeholder="search", value=""+ q +"")
        div
          label(for="restrict_sr") limit my search to r/#{subreddit}
            if !restrict_sr || restrict_sr === 'on'
              input(type="checkbox", name="restrict_sr", id="restrict_sr", checked="checked")
            else
              input(type="checkbox", name="restrict_sr", id="restrict_sr")
        div
          label(for="nsfw") include NSFW results
            if !nsfw || nsfw === 'on'
              input(type="checkbox", name="nsfw", id="nsfw", checked="checked")
            else
              input(type="checkbox", name="nsfw", id="nsfw")
        div
          //- Let me know if there's a better way to add selected attribute!
          label(for="sort") sorted by: 
            select(name="sort",  id="sort")
              if sortby === 'relevance' || !sortby
                option(value="relevance", selected="selected") relevance
                option(value="top") top
                option(value="new") new
                option(value="comments") comments
              if sortby === 'top'
                option(value="relevance") relevance
                option(value="top", selected="selected") top
                option(value="new") new
                option(value="comments") comments
              if sortby === 'new'
                option(value="relevance") relevance
                option(value="top") top
                option(value="new", selected="selected") new
                option(value="comments") comments
              if sortby === 'comments'
                option(value="relevance") relevance
                option(value="top") top
                option(value="new") new
                option(value="comments", selected="selected") comments
        div
          //- Let me know if there's a better way to add selected attribute!
          label(for="t") links from: 
            select(name="t",  id="t")
              if past === 'hour'
                option(value="hour", selected="selected") hour
                option(value="day") 24 hours
                option(value="week") week
                option(value="month") month
                option(value="year") year
                option(value="all") all time
              if past === 'day'
                option(value="hour") hour
                option(value="day", selected="selected") 24 hours
                option(value="week") week
                option(value="month") month
                option(value="year") year
                option(value="all") all time
              if past === 'week'
                option(value="hour") hour
                option(value="day") 24 hours
                option(value="week", selected="selected") week
                option(value="month") month
                option(value="year") year
                option(value="all") all time
              if past === 'month'
                option(value="hour") hour
                option(value="day") 24 hours
                option(value="week") week
                option(value="month", selected="selected") month
                option(value="year") year
                option(value="all") all time
              if past === 'year'
                option(value="hour") hour
                option(value="day") 24 hours
                option(value="week") week
                option(value="month") month
                option(value="year", selected="selected") year
                option(value="all") all time
              if past === 'all' || !past
                option(value="hour") hour
                option(value="day") 24 hours
                option(value="week") week
                option(value="month") month
                option(value="year") year
                option(value="all", selected="selected") all time
        input(type="submit", value="search")
    #links.search
      if json.posts.length === 0 && !no_query
        p no results
      else
        if json.suggested_subreddits
          .suggested-subreddits
            h3 suggested subreddits
            each suggested_subreddit in json.suggested_subreddits
              .link
                .entry
                  -
                    let subbed_to_this_subreddit = false
                    let subbed = []
                    if(user_preferences.subbed_subreddits && Array.isArray(user_preferences.subbed_subreddits))
                      subbed = user_preferences.subbed_subreddits
                    for(let i = 0; i < subbed.length; i++) {
                      if(subbed[i].toLowerCase() === suggested_subreddit.data.display_name.toLowerCase())
                        subbed_to_this_subreddit = true
                    }
                  .content
                    .title
                      a(href="" + suggested_subreddit.data.url + "", rel="noopener noreferrer")
                        h2 #{suggested_subreddit.data.display_name_prefixed}: #{cleanTitle(suggested_subreddit.data.title)}
                    .sub-button
                      if subbed_to_this_subreddit
                        a(href="/unsubscribe/" + suggested_subreddit.data.display_name + "?b=/r/" + subreddit + "/search?q=" + q + "§1nsfw=" + nsfw + "", class="sub-to-subreddit gray", title="subscriptions are saved in your browser's cookies") unsubscribe
                      else
                        a(href="/subscribe/" + suggested_subreddit.data.display_name + "?b=/r/" + subreddit + "/search?q=" + q + "§1nsfw=" + nsfw + "", class="sub-to-subreddit", title="subscriptions are saved in your browser's cookies") subscribe
                    .description
                      p #{cleanTitle(suggested_subreddit.data.public_description)}
                    .meta
                      p.subscribers #{kFormatter(suggested_subreddit.data.subscribers)} subscribers,
                      p.submitted &nbsp; created
                        span(title="" + toUTCString(suggested_subreddit.data.created) +  "") #{timeDifference(suggested_subreddit.data.created)}
                      .links
                        small
                          a(href="/" + suggested_subreddit.data.display_name_prefixed + "/search?q=" + q + "&nsfw=" + nsfw + "&restrict_sr=on") search within #{suggested_subreddit.data.display_name_prefixed}
                        if suggested_subreddit.data.over_18
                          span.tag.nsfw NSFW
            a(href="/subreddits/search?q="+ q +"", class="btn") show more similar subreddits
        each link in json.posts
          include components/link.pug
    if json.before || json.after
      .view-more-links
        if json.before
          a(href="?q=" + q + "&restrict_sr=" + restrict_sr + "&nsfw=" + nsfw + "&before=" + json.before + "" + (sortby === "new" && sortby ? "&" : "&sort=" + sortby + "&") + (!past ? "" : "t=" + past)) ‹ prev
        if json.after
          a(href="?q=" + q + "&restrict_sr=" + restrict_sr + "&nsfw=" + nsfw + "&after=" + json.after + "" + (sortby === "new" && sortby ? "&" : "&sort=" + sortby + "&") + (!past ? "" : "t=" + past)) next ›
    include includes/footer.pug
