doctype html
html
  head
    title overview for #{data.username}
    meta(property='og:title', content='u/' + data.username + ' - teddit')
    include includes/meta_default.pug
    include includes/head.pug
  body(class=""+ (user_preferences.theme === 'auto' ? 'dark' : user_preferences.theme) + "")
    include includes/topbar.pug
    if user === null
      h1 Error occured
      p #{JSON.stringify(error_data)}
    else
      #user
        header
          .bottom
            a(href="/u/" + data.username + "")
              h3.username user: #{data.username}
            ul.tabmenu
              li(class=!data.post_type || data.post_type == '' ? 'active' : '')
                a(href="/u/" + data.username) overview
              li(class=data.post_type === '/comments' ? 'active' : '')
                a(href="/u/" + data.username + "/comments") comments
              li(class=data.post_type === '/submitted' ? 'active' : '')
                a(href="/u/" + data.username + "/submitted") submitted
        #links
          details
            summary
              if !sortby || sortby === 'new'
                span sorted by: new
              if sortby === 'hot'
                span sorted by: hot
              if sortby === 'top'
                span sorted by: top
              if sortby === 'controversial'
                span sorted by: controversial
            ul
              li(class=!sortby || sortby == 'new' ? 'active' : '')
                a(href="/u/" + data.username + data.post_type) new
              li(class=sortby === 'hot' ? 'active' : '')
                a(href="/u/" + data.username + data.post_type + "?sort=hot") hot
              li(class=sortby === 'top' ? 'active' : '')
                a(href="/u/" + data.username + data.post_type + "?sort=top&t=" + past + "") top
              li(class=sortby === 'controversial' ? 'active' : '')
                a(href="/u/" + data.username + data.post_type + "?sort=controversial&t=" + past + "") controversial
          if sortby === 'top' || sortby === 'controversial'
            details
              summary
                if past === 'all'
                  span links and comments from: all time
                if past === 'hour'
                  span links and comments from: past hour
                if past === 'day'
                  span links and comments from: past 24 hours
                if past === 'week'
                  span links and comments from: past week
                if past === 'month'
                  span links and comments from: past month
                if past === 'year'
                  span links and comments from: past year
              ul
                li(class=past === 'hour' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=hour") past hour
                li(class=past === 'day' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=day") past 24 hours
                li(class=past === 'week' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=week") past week
                li(class=past === 'month' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=month") past month
                li(class=past === 'year' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=year") past year
                li(class=past === 'all' ? 'active' : '')
                  a(href="?sort=" + sortby + "&t=all") all time
        .info
          img(src=data.icon_img)
          h1 #{data.username}
          p(class="user-stat") <span>#{kFormatter(data.link_karma)}</span> post karma
          p(class="user-stat") <span>#{kFormatter(data.comment_karma)}</span> comment karma
          br
          p(title="" + toUTCString(data.created) + "") account created: #{toDateString(data.created)}
          p verified: #{(data.verified) ? "yes" : "no" }
        #links.entries
          if !data.posts || data.posts.length <= 0
            h3 no posts/comments
          each post in data.posts
            if post.type === 't3'
              - 
                var link = post;
              include components/link.pug
            if post.type === 't1'
              .commententry
                .meta
                  .title
                    a(href="" + post.url + "", rel="noopener noreferrer") #{cleanTitle(post.link_title)}
                  .author
                    p by
                      if post.link_author === '[deleted]'
                        | [deleted]
                      else
                        a(href="/u/" + post.link_author + "") #{post.link_author}
                  .subreddit
                    p in
                      a(href="/r/" + post.subreddit + "") #{post.subreddit}
                .comment
                  details(open="")
                    summary
                      a(href="/u/" + data.username + "") #{data.username}
                      p.ups #{post.ups} points
                      p.created(title="" + toUTCString(post.created) + "") #{timeDifference(post.created)}
                    .meta
                      p.author
                        a(href="/u/" + data.username + "") #{data.username}
                      p
                        != post.user_flair
                      p.ups #{post.ups} points
                      p.created(title="" + toUTCString(post.created) + "") #{timeDifference(post.created)}
                    .body
                      div !{post.body_html}
                    if post.over_18
                      span.tag.nsfw NSFW
                    a.context(href="" + post.permalink + "?context=10") context
                    a.comments.t1(href="" + post.url + "") full comments (#{post.num_comments})
          if data.before || data.after
            p view more:
          if data.before && !data.user_front
            a(href="/u/" + data.username + data.post_type + (sortby === "new" ? "?" : "?sort=" + sortby + "&") + (!past ? "" : "t=" + past + "&") + "before=" + data.before + "") ‹ prev
          if data.after
            a(href="/u/" + data.username + data.post_type + (sortby === "new" ? "?" : "?sort=" + sortby + "&") + (!past ? "" : "t=" + past + "&") + "after=" + data.after + "") next ›
    include includes/footer.pug
